@use '../abstract/variables';
@use '../abstract/mixins';
@use '../components/input';
@use '../components/button';

.upload-form {
  position: relative;
  border-radius: 5px;
  border: 3px dashed variables.$color-dark;
  height: 40vh;
  flex-basis: 50%;
  display: flex;
  gap: 2rem;
  justify-content: center;
  align-items: center;
  transition: background-color 0.2s;
  flex-direction: column;

  @include mixins.responsive(portrait) {
    height: 20vh;
    padding: 2rem;
  }

  &:hover,
  &:target {
    // border: 3px dashed variables.$color-primary-dark;
  }

  &:hover::after {
    opacity: 1;
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.4s;
    box-shadow: variables.$shadow;
    z-index: -1;
  }

  &__label {
    display: block;
    text-align: center;
    max-width: 30rem;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;

    &:hover {
      cursor: pointer;
      color: variables.$color-primary;
    }
  }

  &__btn {
    @extend %button-action;
    position: relative;
    // padding: 0.5rem 1.5rem;
    // border: 2px solid variables.$color-primary;
    // border-radius: 5px;
    // transition: all 0.2;
    // appearance: none;
    // outline: none;
    //
    // &:hover {
    //   cursor: pointer;
    //   background-color: variables.$color-primary;
    //   color: variables.$color-light;
    // }
    //
    // &:active {
    //   background-color: variables.$color-primary-dark;
    //   color: variables.$color-light;
    //   border: 2px solid variables.$color-primary-dark;
    // }
  }

  &__input {
    display: none;
  }

  &__password {
    position: relative;

    &--input {
      @extend %input;
      padding-right: 3rem;
    }

    &--toggle {
      position: absolute;
      top: 50%;
      right: 1rem;
      width: 1.6rem;
      height: 1.6rem;
      transform: translateY(-50%);
      background: none;
      border: none;
      fill: variables.$color-dark;

      &:hover {
        cursor: pointer;
        fill: variables.$color-primary;
      }
    }
  }

  &__error {
    display: block;
    color: orangered;
  }
}
